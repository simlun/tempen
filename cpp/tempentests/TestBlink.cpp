#include "catch.h"
#include <Led.h>

#include "ControlLoop.h"
#include "MicroController.h"


class Counter : public ControlLoop {
public:
    int getCount();
    void body() override;
private:
    int count = 0;
};

int Counter::getCount() {
    return count;
}

void Counter::body() {
    count++;
}


SCENARIO("Blinking a LED") {
    GIVEN("a LED") {

        Led led;

        WHEN("it is in its default state") {
            THEN("it is not glowing") {
                REQUIRE(!led.isGlowing());
            }
        }

        WHEN("it is enabled") {
            led.enable();
            THEN("it is glowing") {
                REQUIRE(led.isGlowing());
            }

            AND_WHEN("it is disabled") {
                led.disable();
                THEN("it is not glowing") {
                    REQUIRE(!led.isGlowing());
                }
            }
        }
    }

    GIVEN("micro controller with a simple counting control loop") {
        Counter counter;
        REQUIRE(counter.getCount() == 0);

        MicroController mc(&counter);

        WHEN("a micro controller is running, it ticks the control loop"){
            mc.tick();

            THEN("the body of the control loop is executed") {
                REQUIRE(counter.getCount() == 1);

                AND_WHEN("the ticking continues") {
                    mc.tick();
                    mc.tick();

                    THEN("the body of the control loop is executed again and again") {
                        REQUIRE(counter.getCount() == 3);
                    }
                }
            }
        }
    }
}