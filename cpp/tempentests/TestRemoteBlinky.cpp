#include "catch.h"
#include <MicroController.h>
#include <Blinky.h>
#include <Sender.h>
#include <Receiver.h>
#include <RemoteLed.h>
#include <RemoteLedController.h>

#include "FakeStopwatch.h"


class TestChannel : public Sender, public Receiver {
public:
    void send(char c) override {
        mystack.push_back(c);
    }

    void receive() override {
        if (mystack.empty())
            return;

        char c = mystack.back();
        mystack.pop_back();

        if (handler != nullptr)
            handler->handle(c);
    }

private:
    std::vector<char> mystack;
};


SCENARIO("Blinking a led on a remote micro controller") {
    GIVEN("a shared micro controller-to-micro controller communications channel") {
        TestChannel channel;

        GIVEN("a micro controller running Blinky with a RemoteLed") {
            Sender * sender = &channel;
            RemoteLed remoteLed(sender);
            FakeStopwatch stopwatch;
            Blinky masterLoop(&stopwatch, &remoteLed);
            MicroController master(&masterLoop);

            GIVEN("another micro controller with a real LED") {
                Led realLed;
                Receiver * receiver = &channel;
                RemoteLedController remoteControlLoop(receiver, &realLed);
                receiver->setHandler(&remoteControlLoop);
                MicroController remote(&remoteControlLoop);

                WHEN("the remote micro controller is started") {
                    stopwatch.setMillisecondsSinceStart(0);
                    master.tick();
                    remote.tick();
                    THEN("its LED is not glowing") {
                        REQUIRE(!realLed.isGlowing());
                    }
                }

                WHEN("one second has passed since the last observed stopwatch") {
                    stopwatch.setMillisecondsSinceStart(0);
                    master.tick();
                    remote.tick();
                    stopwatch.setMillisecondsSinceStart(1000);
                    master.tick();
                    remote.tick();
                    THEN("the LED is glowing") {
                        REQUIRE(realLed.isGlowing());
                    }
                }
            }

        }
    }
}
